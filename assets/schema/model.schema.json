{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://projectforge.dev/schemas/model.schema.json",
  "title": "Model",
  "type": "object",
  "properties": {
    "name": {
      "description": "the name of the model, lowercase and underscore-delimited",
      "type": "string",
      "minLength": 1
    },
    "package": {
      "description": "single-word package name for this model",
      "type": "string",
      "minLength": 1
    },
    "group": {
      "description": "when set, places this model inside a folder group",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "description": {
      "description": "used in UI and documentation",
      "type": "string"
    },
    "icon": {
      "description": "one of the SVGs available in ./assets",
      "type": "string"
    },
    "ordering": {
      "description": "default SQL ordering when querying this model",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "column": {
            "type": "string",
            "minLength": 1
          },
          "asc": {
            "type": "boolean"
          }
        }
      }
    },
    "search": {
      "description": "additional columns to include in the search",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "tags": {
      "description": "flags for this model that control generated code",
      "type": "array",
      "items": {
        "enum": ["audit", "big", "count", "events", "external", "menu-hidden", "menu-items", "no-golang", "no-database", "no-service", "no-controller", "no-routes", "public", "search", "softDelete", "typescript"]
      }
    },
    "title": {
      "description": "overrides the computed title",
      "type": "string"
    },
    "plural": {
      "description": "overrides the computed plural form",
      "type": "string"
    },
    "proper": {
      "description": "overrides the computed proper-case version of the name",
      "type": "string"
    },
    "route": {
      "description": "overrides the computed route",
      "type": "string"
    },
    "config": {
      "description": "a config object for this model; unused",
      "$ref": "config.schema.json#/"
    },
    "columns": {
      "description": "the columns in this model's table",
      "type": "array",
      "items": {
        "$ref": "column.schema.json#/"
      }
    },
    "relations": {
      "description": "defines relationships to other models",
      "type": "array",
      "items": {
        "$ref": "#/$defs/relation"
      }
    },
    "indexes": {
      "description": "additional indexes for this model",
      "type": "array",
      "items": {
        "$ref": "#/$defs/index"
      }
    },
    "seedData": {
      "description": "initial seed data for this model, in `[][]string` form",
      "type": "array"
    },
    "links": {
      "description": "additional links to display for this model",
      "type": "array"
    },
    "imports": {
      "description": "additional imports to include when rendering code",
      "type": "array"
    }
  },
  "required": [
    "name",
    "package"
  ],
  "$defs": {
    "relation": {
      "type": "object",
      "properties": {
        "name": {
          "description": "name of this relationship, used as the database FK name",
          "type": "string"
        },
        "src": {
          "description": "columns from source table",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "table": {
          "description": "name of target table",
          "type": "string"
        },
        "tgt": {
          "description": "columns from target table",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "index": {
      "type": "object",
      "properties": {
        "name": {
          "description": "name of the index, used as the database name",
          "type": "string"
        },
        "decl": {
          "description": "declaration, in SQL format, of this index's members",
          "type": "string"
        }
      }
    }
  }
}
