// Code generated by qtc from "Prompt.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/vmcp/Prompt.html:1
package vmcp

//line views/vmcp/Prompt.html:1
import (
	"projectforge.dev/projectforge/app"
	"projectforge.dev/projectforge/app/controller/cutil"
	"projectforge.dev/projectforge/app/lib/mcpserver"
	"projectforge.dev/projectforge/views/components"
	"projectforge.dev/projectforge/views/layout"
)

//line views/vmcp/Prompt.html:9
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vmcp/Prompt.html:9
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vmcp/Prompt.html:9
type PromptDetail struct {
	layout.Basic
	Server *mcpserver.Server
	Prompt *mcpserver.Prompt
}

//line views/vmcp/Prompt.html:15
func (p *PromptDetail) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vmcp/Prompt.html:15
	qw422016.N().S(`
  <div class="card">
    <h3>`)
//line views/vmcp/Prompt.html:17
	components.StreamSVGIcon(qw422016, p.Prompt.IconSafe(), ps)
//line views/vmcp/Prompt.html:17
	qw422016.N().S(` `)
//line views/vmcp/Prompt.html:17
	qw422016.E().S(p.Prompt.Name)
//line views/vmcp/Prompt.html:17
	qw422016.N().S(`</h3>
    <em>`)
//line views/vmcp/Prompt.html:18
	qw422016.E().S(p.Prompt.Description)
//line views/vmcp/Prompt.html:18
	qw422016.N().S(`</em>
  </div>
  <div class="card">
    <h3>`)
//line views/vmcp/Prompt.html:21
	components.StreamSVGIcon(qw422016, `file`, ps)
//line views/vmcp/Prompt.html:21
	qw422016.N().S(` Prompt Content</h3>
    <div class="mt">
      `)
//line views/vmcp/Prompt.html:23
	out, err := cutil.FormatLang(p.Prompt.Content, "markdown")

//line views/vmcp/Prompt.html:23
	qw422016.N().S(`
      `)
//line views/vmcp/Prompt.html:24
	if err == nil {
//line views/vmcp/Prompt.html:24
		qw422016.N().S(`
      `)
//line views/vmcp/Prompt.html:25
		qw422016.N().S(out)
//line views/vmcp/Prompt.html:25
		qw422016.N().S(`
      `)
//line views/vmcp/Prompt.html:26
	} else {
//line views/vmcp/Prompt.html:26
		qw422016.N().S(`
      `)
//line views/vmcp/Prompt.html:27
		qw422016.E().S(p.Prompt.Content)
//line views/vmcp/Prompt.html:27
		qw422016.N().S(`
      `)
//line views/vmcp/Prompt.html:28
	}
//line views/vmcp/Prompt.html:28
	qw422016.N().S(`
    </div>
  </div>
`)
//line views/vmcp/Prompt.html:31
}

//line views/vmcp/Prompt.html:31
func (p *PromptDetail) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vmcp/Prompt.html:31
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vmcp/Prompt.html:31
	p.StreamBody(qw422016, as, ps)
//line views/vmcp/Prompt.html:31
	qt422016.ReleaseWriter(qw422016)
//line views/vmcp/Prompt.html:31
}

//line views/vmcp/Prompt.html:31
func (p *PromptDetail) Body(as *app.State, ps *cutil.PageState) string {
//line views/vmcp/Prompt.html:31
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vmcp/Prompt.html:31
	p.WriteBody(qb422016, as, ps)
//line views/vmcp/Prompt.html:31
	qs422016 := string(qb422016.B)
//line views/vmcp/Prompt.html:31
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vmcp/Prompt.html:31
	return qs422016
//line views/vmcp/Prompt.html:31
}

//line views/vmcp/Prompt.html:33
func streamlistPrompts(qw422016 *qt422016.Writer, prompts mcpserver.Prompts, ps *cutil.PageState) {
//line views/vmcp/Prompt.html:33
	qw422016.N().S(`
`)
//line views/vmcp/Prompt.html:34
	for idx, p := range prompts {
//line views/vmcp/Prompt.html:34
		qw422016.N().S(`  <a class="link-section" href="/mcp/prompt/`)
//line views/vmcp/Prompt.html:35
		qw422016.E().S(p.Name)
//line views/vmcp/Prompt.html:35
		qw422016.N().S(`">
    <div class="clear mt">
      <div class="left mrs">`)
//line views/vmcp/Prompt.html:37
		components.StreamSVGRef(qw422016, p.IconSafe(), 40, 40, "", ps)
//line views/vmcp/Prompt.html:37
		qw422016.N().S(`</div>
      <strong class="highlight">`)
//line views/vmcp/Prompt.html:38
		qw422016.E().S(p.Name)
//line views/vmcp/Prompt.html:38
		qw422016.N().S(`</strong>
      <div><em>`)
//line views/vmcp/Prompt.html:39
		qw422016.E().S(p.Description)
//line views/vmcp/Prompt.html:39
		qw422016.N().S(`</em></div>
    </div>
  </a>
`)
//line views/vmcp/Prompt.html:42
		if idx < len(prompts)-1 {
//line views/vmcp/Prompt.html:42
			qw422016.N().S(`  <hr />
`)
//line views/vmcp/Prompt.html:44
		}
//line views/vmcp/Prompt.html:45
	}
//line views/vmcp/Prompt.html:46
}

//line views/vmcp/Prompt.html:46
func writelistPrompts(qq422016 qtio422016.Writer, prompts mcpserver.Prompts, ps *cutil.PageState) {
//line views/vmcp/Prompt.html:46
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vmcp/Prompt.html:46
	streamlistPrompts(qw422016, prompts, ps)
//line views/vmcp/Prompt.html:46
	qt422016.ReleaseWriter(qw422016)
//line views/vmcp/Prompt.html:46
}

//line views/vmcp/Prompt.html:46
func listPrompts(prompts mcpserver.Prompts, ps *cutil.PageState) string {
//line views/vmcp/Prompt.html:46
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vmcp/Prompt.html:46
	writelistPrompts(qb422016, prompts, ps)
//line views/vmcp/Prompt.html:46
	qs422016 := string(qb422016.B)
//line views/vmcp/Prompt.html:46
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vmcp/Prompt.html:46
	return qs422016
//line views/vmcp/Prompt.html:46
}
