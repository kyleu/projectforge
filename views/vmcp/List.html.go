// Code generated by qtc from "List.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/vmcp/List.html:1
package vmcp

//line views/vmcp/List.html:1
import (
	"projectforge.dev/projectforge/app"
	"projectforge.dev/projectforge/app/controller/cutil"
	"projectforge.dev/projectforge/app/lib/mcpserver"
	"projectforge.dev/projectforge/app/util"
	"projectforge.dev/projectforge/views/components"
	"projectforge.dev/projectforge/views/layout"
)

//line views/vmcp/List.html:10
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vmcp/List.html:10
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vmcp/List.html:10
type MCPList struct {
	layout.Basic
	Server *mcpserver.Server
}

//line views/vmcp/List.html:15
func (p *MCPList) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vmcp/List.html:15
	qw422016.N().S(`
  <div class="card">
    <h3>`)
//line views/vmcp/List.html:17
	components.StreamSVGIcon(qw422016, `chart`, ps)
//line views/vmcp/List.html:17
	qw422016.N().S(` Model Context Protocol</h3>
    <div class="mt">You can register `)
//line views/vmcp/List.html:18
	qw422016.E().S(util.AppName)
//line views/vmcp/List.html:18
	qw422016.N().S(` as a Model Context Protocol server using the command line or HTTP.</div>
    <div class="mt">
      <ul class="accordion">
        <li>
          <input id="accordion-cli" type="checkbox" hidden="hidden" />
          <label for="accordion-cli">`)
//line views/vmcp/List.html:23
	components.StreamExpandCollapse(qw422016, 3, ps)
//line views/vmcp/List.html:23
	qw422016.N().S(` Command Line</label>
          <div class="bd"><div><div>
            Register `)
//line views/vmcp/List.html:25
	qw422016.E().S(util.AppName)
//line views/vmcp/List.html:25
	qw422016.N().S(` as a command line MCP server by calling this app using the command line as <code>`)
//line views/vmcp/List.html:25
	qw422016.E().S(util.AppKey)
//line views/vmcp/List.html:25
	qw422016.N().S(` mcp</code>.
            <div class="mt">`)
//line views/vmcp/List.html:26
	qw422016.N().S(cutil.FormatLangIgnoreErrors(mcpserver.UsageCLI(), "json"))
//line views/vmcp/List.html:26
	qw422016.N().S(`</div>
          </div></div></div>
        </li>
        <li>
          <input id="accordion-http" type="checkbox" hidden="hidden" />
          <label for="accordion-http">`)
//line views/vmcp/List.html:31
	components.StreamExpandCollapse(qw422016, 3, ps)
//line views/vmcp/List.html:31
	qw422016.N().S(` Streamable HTTP</label>
          <div class="bd"><div><div>
            Register `)
//line views/vmcp/List.html:33
	qw422016.E().S(util.AppName)
//line views/vmcp/List.html:33
	qw422016.N().S(` as an HTTP MCP server by sending a POST to <code>/mcp</code>.
            <div class="mt">`)
//line views/vmcp/List.html:34
	qw422016.N().S(cutil.FormatLangIgnoreErrors(mcpserver.UsageHTTP(), "json"))
//line views/vmcp/List.html:34
	qw422016.N().S(`</div>
            </div>
          </div></div></div>
        </li>
      </ul>
    </div>
  </div>

`)
//line views/vmcp/List.html:42
	if len(p.Server.Resources) > 0 {
//line views/vmcp/List.html:42
		qw422016.N().S(`  <div class="card">
    <h3>`)
//line views/vmcp/List.html:44
		components.StreamSVGIcon(qw422016, `file`, ps)
//line views/vmcp/List.html:44
		qw422016.N().S(` Resources</h3>
    `)
//line views/vmcp/List.html:45
		streamlistResources(qw422016, p.Server.Resources, ps)
//line views/vmcp/List.html:45
		qw422016.N().S(`
  </div>
`)
//line views/vmcp/List.html:47
	}
//line views/vmcp/List.html:47
	qw422016.N().S(`
`)
//line views/vmcp/List.html:49
	if len(p.Server.ResourceTemplates) > 0 {
//line views/vmcp/List.html:49
		qw422016.N().S(`  <div class="card">
    <h3>`)
//line views/vmcp/List.html:51
		components.StreamSVGIcon(qw422016, `folder`, ps)
//line views/vmcp/List.html:51
		qw422016.N().S(` Resource Templates</h3>
    `)
//line views/vmcp/List.html:52
		streamlistResourceTemplates(qw422016, p.Server.ResourceTemplates, ps)
//line views/vmcp/List.html:52
		qw422016.N().S(`
  </div>
`)
//line views/vmcp/List.html:54
	}
//line views/vmcp/List.html:54
	qw422016.N().S(`
`)
//line views/vmcp/List.html:56
	if len(p.Server.Tools) > 0 {
//line views/vmcp/List.html:56
		qw422016.N().S(`  <div class="card">
    <h3>`)
//line views/vmcp/List.html:58
		components.StreamSVGIcon(qw422016, `cog`, ps)
//line views/vmcp/List.html:58
		qw422016.N().S(` Tools</h3>
    `)
//line views/vmcp/List.html:59
		streamlistTools(qw422016, p.Server.Tools, ps)
//line views/vmcp/List.html:59
		qw422016.N().S(`
  </div>
`)
//line views/vmcp/List.html:61
	}
//line views/vmcp/List.html:61
	qw422016.N().S(`
`)
//line views/vmcp/List.html:63
	if len(p.Server.Prompts) > 0 {
//line views/vmcp/List.html:63
		qw422016.N().S(`  <div class="card">
    <h3>`)
//line views/vmcp/List.html:65
		components.StreamSVGIcon(qw422016, `gift`, ps)
//line views/vmcp/List.html:65
		qw422016.N().S(` Prompts</h3>
    `)
//line views/vmcp/List.html:66
		streamlistPrompts(qw422016, p.Server.Prompts, ps)
//line views/vmcp/List.html:66
		qw422016.N().S(`
  </div>
`)
//line views/vmcp/List.html:68
	}
//line views/vmcp/List.html:69
}

//line views/vmcp/List.html:69
func (p *MCPList) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vmcp/List.html:69
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vmcp/List.html:69
	p.StreamBody(qw422016, as, ps)
//line views/vmcp/List.html:69
	qt422016.ReleaseWriter(qw422016)
//line views/vmcp/List.html:69
}

//line views/vmcp/List.html:69
func (p *MCPList) Body(as *app.State, ps *cutil.PageState) string {
//line views/vmcp/List.html:69
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vmcp/List.html:69
	p.WriteBody(qb422016, as, ps)
//line views/vmcp/List.html:69
	qs422016 := string(qb422016.B)
//line views/vmcp/List.html:69
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vmcp/List.html:69
	return qs422016
//line views/vmcp/List.html:69
}
