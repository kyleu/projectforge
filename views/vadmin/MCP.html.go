// Code generated by qtc from "MCP.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/vadmin/MCP.html:1
package vadmin

//line views/vadmin/MCP.html:1
import (
	"projectforge.dev/projectforge/app"
	"projectforge.dev/projectforge/app/controller/cutil"
	"projectforge.dev/projectforge/app/lib/mcpserver"
	"projectforge.dev/projectforge/app/util"
	"projectforge.dev/projectforge/views/components"
	"projectforge.dev/projectforge/views/components/edit"
	"projectforge.dev/projectforge/views/layout"
)

//line views/vadmin/MCP.html:11
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vadmin/MCP.html:11
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vadmin/MCP.html:11
type MCP struct {
	layout.Basic
	Tools  map[string]*mcpserver.Tool
	Tool   *mcpserver.Tool
	Args   util.ValueMap
	Result string
}

//line views/vadmin/MCP.html:19
func (p *MCP) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vadmin/MCP.html:19
	qw422016.N().S(`
  <div class="card">
    <h3>`)
//line views/vadmin/MCP.html:21
	components.StreamSVGIcon(qw422016, `chart`, ps)
//line views/vadmin/MCP.html:21
	qw422016.N().S(` Model Context Protocol Tools</h3>
    <ul class="mt">
`)
//line views/vadmin/MCP.html:23
	for _, k := range util.MapKeysSorted(p.Tools) {
//line views/vadmin/MCP.html:24
		t := p.Tools[k]

//line views/vadmin/MCP.html:24
		qw422016.N().S(`      <li>
        <a href="/admin/mcp/tool/`)
//line views/vadmin/MCP.html:26
		qw422016.E().S(t.Name)
//line views/vadmin/MCP.html:26
		qw422016.N().S(`"><strong>`)
//line views/vadmin/MCP.html:26
		qw422016.E().S(t.Name)
//line views/vadmin/MCP.html:26
		qw422016.N().S(`</strong></a>
`)
//line views/vadmin/MCP.html:27
		if p.Tool == nil {
//line views/vadmin/MCP.html:27
			qw422016.N().S(`        <div><em>`)
//line views/vadmin/MCP.html:28
			qw422016.E().S(t.Description)
//line views/vadmin/MCP.html:28
			qw422016.N().S(`</em></div>
`)
//line views/vadmin/MCP.html:29
		}
//line views/vadmin/MCP.html:29
		qw422016.N().S(`      </li>
`)
//line views/vadmin/MCP.html:31
	}
//line views/vadmin/MCP.html:31
	qw422016.N().S(`    </ul>
  </div>
`)
//line views/vadmin/MCP.html:34
	if p.Tool != nil {
//line views/vadmin/MCP.html:34
		qw422016.N().S(`  <div class="card">
    <h3>`)
//line views/vadmin/MCP.html:36
		components.StreamSVGIcon(qw422016, `cog`, ps)
//line views/vadmin/MCP.html:36
		qw422016.N().S(` `)
//line views/vadmin/MCP.html:36
		qw422016.E().S(p.Tool.Name)
//line views/vadmin/MCP.html:36
		qw422016.N().S(`</h3>
    <em>`)
//line views/vadmin/MCP.html:37
		qw422016.E().S(p.Tool.Description)
//line views/vadmin/MCP.html:37
		qw422016.N().S(`</em>
    <div class="mt">
      Register this tool as an MCP server by:
      <ul>
        <li>calling this app using the command line as <code>`)
//line views/vadmin/MCP.html:41
		qw422016.E().S(util.AppKey)
//line views/vadmin/MCP.html:41
		qw422016.N().S(` mcp</code></li>
        <li>sending an SSE POST to <code>/admin/mcp</code></li>
      </ul>
    </div>
  </div>
  <div class="card">
    <h3>`)
//line views/vadmin/MCP.html:47
		components.StreamSVGIcon(qw422016, `play`, ps)
//line views/vadmin/MCP.html:47
		qw422016.N().S(` Arguments</h3>
    <div class="mt">
      `)
//line views/vadmin/MCP.html:49
		edit.StreamTableEditor(qw422016, "args", p.Tool.Args, p.Args, "/admin/mcp/tool/"+p.Tool.Name, "post", "Run")
//line views/vadmin/MCP.html:49
		qw422016.N().S(`
    </div>
  </div>
`)
//line views/vadmin/MCP.html:52
	}
//line views/vadmin/MCP.html:53
	if p.Result != "" {
//line views/vadmin/MCP.html:53
		qw422016.N().S(`  <div class="card">
    <h3>`)
//line views/vadmin/MCP.html:55
		components.StreamSVGIcon(qw422016, `file`, ps)
//line views/vadmin/MCP.html:55
		qw422016.N().S(` Result</h3>
    <div class="mt">
      <pre>`)
//line views/vadmin/MCP.html:57
		qw422016.E().S(p.Result)
//line views/vadmin/MCP.html:57
		qw422016.N().S(`</pre>
    </div>
  </div>
`)
//line views/vadmin/MCP.html:60
	}
//line views/vadmin/MCP.html:61
}

//line views/vadmin/MCP.html:61
func (p *MCP) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vadmin/MCP.html:61
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vadmin/MCP.html:61
	p.StreamBody(qw422016, as, ps)
//line views/vadmin/MCP.html:61
	qt422016.ReleaseWriter(qw422016)
//line views/vadmin/MCP.html:61
}

//line views/vadmin/MCP.html:61
func (p *MCP) Body(as *app.State, ps *cutil.PageState) string {
//line views/vadmin/MCP.html:61
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vadmin/MCP.html:61
	p.WriteBody(qb422016, as, ps)
//line views/vadmin/MCP.html:61
	qs422016 := string(qb422016.B)
//line views/vadmin/MCP.html:61
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vadmin/MCP.html:61
	return qs422016
//line views/vadmin/MCP.html:61
}
