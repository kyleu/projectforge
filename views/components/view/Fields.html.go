// Code generated by qtc from "Fields.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/components/view/Fields.html:1
package view

//line views/components/view/Fields.html:1
import (
	"projectforge.dev/projectforge/app/controller/cutil"
	"projectforge.dev/projectforge/app/util"
)

//line views/components/view/Fields.html:6
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/components/view/Fields.html:6
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/components/view/Fields.html:6
func StreamFields(qw422016 *qt422016.Writer, fields util.FieldDescs, values util.ValueMap, ps *cutil.PageState) {
//line views/components/view/Fields.html:7
	for _, arg := range fields {
//line views/components/view/Fields.html:8
		switch arg.Type {
//line views/components/view/Fields.html:9
		case "bool":
//line views/components/view/Fields.html:10
			StreamBoolTable(qw422016, arg.TitleSafe(), values.GetBoolOr(arg.Key, arg.DefaultBool(), true), 3, ps)
//line views/components/view/Fields.html:11
		case "number", "int":
//line views/components/view/Fields.html:12
			StreamIntTable(qw422016, arg.TitleSafe(), values.GetIntOr(arg.Key, arg.DefaultInt(), true), 3)
//line views/components/view/Fields.html:13
		case "float":
//line views/components/view/Fields.html:14
			StreamFloatTable(qw422016, arg.TitleSafe(), values.GetFloatOr(arg.Key, arg.DefaultFloat(), true), 3)
//line views/components/view/Fields.html:15
		default:
//line views/components/view/Fields.html:16
			StreamStringTable(qw422016, arg.TitleSafe(), values.GetStringOr(arg.Key, arg.Default, true), 3)
//line views/components/view/Fields.html:17
		}
//line views/components/view/Fields.html:18
	}
//line views/components/view/Fields.html:19
}

//line views/components/view/Fields.html:19
func WriteFields(qq422016 qtio422016.Writer, fields util.FieldDescs, values util.ValueMap, ps *cutil.PageState) {
//line views/components/view/Fields.html:19
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/components/view/Fields.html:19
	StreamFields(qw422016, fields, values, ps)
//line views/components/view/Fields.html:19
	qt422016.ReleaseWriter(qw422016)
//line views/components/view/Fields.html:19
}

//line views/components/view/Fields.html:19
func Fields(fields util.FieldDescs, values util.ValueMap, ps *cutil.PageState) string {
//line views/components/view/Fields.html:19
	qb422016 := qt422016.AcquireByteBuffer()
//line views/components/view/Fields.html:19
	WriteFields(qb422016, fields, values, ps)
//line views/components/view/Fields.html:19
	qs422016 := string(qb422016.B)
//line views/components/view/Fields.html:19
	qt422016.ReleaseByteBuffer(qb422016)
//line views/components/view/Fields.html:19
	return qs422016
//line views/components/view/Fields.html:19
}
