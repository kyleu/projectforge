name: test
on:
  workflow_call:
  push:
    tags:
      - "*"
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
permissions:
  contents: write
jobs:
  build:
    runs-on: "ubuntu-latest"
    # $PF_SECTION_START(setup)$
    # $PF_SECTION_END(setup)$
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 0
      - name: "Golang"
        uses: "actions/setup-go@v5"
        with:
          go-version: "1.25.0"
      - name: "Cache"
        uses: "actions/cache@v4"
        with:
          path: "~/go/pkg/mod"
          key: "${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}"
          restore-keys: |
            ${{ runner.os }}-go-
      - name: "Dependencies"
        run: "bin/bootstrap.sh"
      - name: "Config"
        env:
          OWNER: "${{ github.repository_owner }}"
          TOKEN: "${{ secrets.CR_PAT }}"
        run: "git config --global url.\"https://${OWNER}:${TOKEN}@github.com\".insteadOf \"https://github.com\""
      - name: "Templates"
        run: "bin/templates.sh"
      - name: "Modules"
        run: "go mod download"
        env:
          GOPRIVATE: "github.com/${{ github.repository_owner }}"
          GITHUB_TOKEN: "${{ secrets.CR_PAT }}"
          OWNER: "${{ github.repository_owner }}"
          TOKEN: "${{ secrets.CR_PAT }}"
      - name: "Test"
        run: |
          if [ -f "test.env" ]; then
              export $(cat test.env | grep -v "#" | xargs)
          fi
          if [ -f "./bin/test-setup.sh" ]; then
              ./bin/test-setup.sh
          fi
          go test -json ./app/... > test.json
        env:
          GOEXPERIMENT: "jsonv2"
          GOPRIVATE: "github.com/${{ github.repository_owner }}"
          GITHUB_TOKEN: "${{ secrets.CR_PAT }}"
          OWNER: "${{ github.repository_owner }}"
          TOKEN: "${{ secrets.CR_PAT }}"
      - name: "Annotate"
        if: always()
        uses: guyarb/golang-test-annotations@v0.5.0
        with:
          test-results: test.json
